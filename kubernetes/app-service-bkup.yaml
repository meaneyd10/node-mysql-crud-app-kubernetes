apiVersion: v1
kind: Service
metadata:
  name: nodeservice
spec:
  type: NodePort
  selector:
    app: playerdb
  ports:
    - port: 3000 # expose the service on internal port 80
      targetPort: 3000
      nodePort: 30001 #our NodeJS app listens on port 3000
---


# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-11-18T18:37:49Z"
  name: nodejs-player-app-deployment
  namespace: default
  resourceVersion: "3975"
  selfLink: /api/v1/namespaces/default/services/nodejs-player-app-deployment
  uid: fbd983c9-bdb8-4b25-b1f8-5829c7e53a03
spec:
  clusterIP: 10.99.6.86
  externalTrafficPolicy: Cluster
  ports:
    - nodePort: 30415
      port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: playerapp
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"storage.k8s.io/v1","kind":"StorageClass","metadata":{"annotations":{"storageclass.kubernetes.io/is-default-class":"true"},"labels":{"addonmanager.kubernetes.io/mode":"EnsureExists"},"name":"standard"},"provisioner":"k8s.io/minikube-hostpath"}
    storageclass.kubernetes.io/is-default-class: "true"
  creationTimestamp: "2020-11-18T20:07:33Z"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: standard
  resourceVersion: "236"
  selfLink: /apis/storage.k8s.io/v1/storageclasses/standard
  uid: a27031b4-e2ac-4e9a-a84f-e3f7d228bd19
provisioner: k8s.io/minikube-hostpath
reclaimPolicy: Delete
volumeBindingMode: Immediate
